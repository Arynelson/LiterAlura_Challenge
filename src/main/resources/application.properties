spring.application.name=literalura

# URL de conexão JDBC para o PostgreSQL
# Formato: jdbc:postgresql://<host>:<porta>/<nome-do-banco-de-dados>
# O host 'localhost' significa que o banco está rodando na sua própria máquina.
# A porta padrão do PostgreSQL é 5432.
spring.datasource.url=jdbc:postgresql://localhost:5432/literalura_db

# Usuário e senha para acessar o banco de dados
spring.datasource.username=postgres
spring.datasource.password=1234

# ===================================================================
# Configuração do JPA e Hibernate
# ===================================================================

# Dialeto que o Hibernate (a implementação do JPA que o Spring usa) deve usar.
# Isso o ajuda a "falar" a versão correta do SQL para o PostgreSQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# (Opcional, mas MUITO útil para desenvolvimento)
# Ação a ser executada no banco de dados quando a aplicação iniciar.
# 'update' significa: verifique minhas classes @Entity e atualize o esquema do banco
# (crie tabelas, colunas, etc.) para que correspondam. Não apaga dados existentes.
# Outras opções: 'create' (apaga tudo e recria), 'validate', 'none'.
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# (Opcional, mas MUITO útil para depuração)
# Mostra no console todos os comandos SQL que o Hibernate está executando.
# Ajuda a entender o que está acontecendo por baixo dos panos.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true # Formata o SQL para ficar mais legível
